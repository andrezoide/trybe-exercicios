// EVENTOS NO JAVA SCRIPT
//PIarte  - O que √© um escutador de eventos?
//Ele tem esse nome porque √© um c√≥digo colocado em um elemento que tem uma √∫nica raz√£o de ser: ficar ali esperando que um evento espec√≠fico ocorra (um click, por exemplo) e, quando isso acontecer, executar uma fun√ß√£o pr√©-determinada pelo programador.

//Manipula√ß√£o de eventos disparados pelo DOM - DOM on-event handlers

//Segundo exemplo: Manipula√ß√£o de eventos declarados na linha do HTML - Inline event handlers.

//Voc√™ viu que pode usar o onload, que √© um event listener que vem no objeto window do browser, e viu tamb√©m que pode utilizar o atributo onclick para esperar por eventos de clique em um elemento.

//No entanto, utilizar atributos HTML de escutadores de eventos n√£o √© uma pr√°tica recomendada, por alguns motivos. Um deles √© que o ideal √© n√£o misturar o seu c√≥digo HTML com o c√≥digo JavaScript. Outro motivo √© que, se voc√™ precisar adicionar events listeners em muitos elementos, ou mesmo precisar mudar qual fun√ß√£o √© adicionada como resposta a esses eventos nesses elementos depois, fica complicado ter de adicionar manualmente a propriedade em cada um dos elementos. Por essas raz√µes, utilizar eventos inline (como s√£o chamados eventos adicionados diretamente no HTML) √© considerada uma m√° pr√°tica.

//Mas ent√£o, como utilizar um evento de clique em um elemento? Bem, √© para esse e outros que utilizamos o addEventListener, que voc√™ ver√° a seguir. üòâ



//Parte II - Conhe√ßa o addEventListener
//O c√≥digo mais comum para criar um escutador de eventos em um elemento √© atrav√©s de uma fun√ß√£o nativa do JavaScript, chamada addEventListener. Fun√ß√µes nativas s√£o fun√ß√µes que j√° existem prontas dentro da linguagem e, como toda fun√ß√£o, podem receber par√¢metros.
//No seu uso mais comum, addEventListener recebe dois par√¢metros:
//O evento que estamos esperando escutar: Exemplos: click, change, mouseover etc;
//A fun√ß√£o (criada por voc√™) que ser√° executada quando o evento acontecer.
//A seguir, voc√™ vai aprender a como utilizar essa fun√ß√£o:

//addEventListener (tipoEvento, fun√ß√£o);
//1- permite adicionar 'escutadores' de forma mais flex√≠vel;
//2- codigo javascript somente na parte javascript.

//tipos de eventos:
//click, change, dblclick, scroll, keydown, mouseleave, mouseover.

